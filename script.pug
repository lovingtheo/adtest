extends ui_layout
  
block content

  
  
  .computer.only.tablet.only.four.wide.column 
    .ui.card
      .image
        if user.profile.picture
          img(src='/user_post/'+user.profile.picture)
        else
          img(src=user.gravatar(60))
      .content
        a.header= user.profile.name || user.email || user.id
        .meta="@"+user.username
        .description=user.profile.bio
        .description
          if user.profile.location
            i.marker.icon
            span=user.profile.location
      .one.ui.bottom.attached.icon.buttons
          button.ui.editprofile.button(data-tooltip='Update Your Profile', data-position='bottom left')
            i.write.icon

  #loading.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
    img.ui.centered.small.image(src='/heart.svg')
  #content.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column(style='display: none;')
    //-.ui.active.dimmer.feed
      .ui.large.text.loader Loading
    //- Input for creating new post at top of feed
    #newpost.ui.fluid.left.labeled.right.icon.input
      .ui.label
        if user.profile.picture
          img.ui.avatar.image(src='/user_post/'+user.profile.picture)
        else
          img.ui.avatar.image(src=user.gravatar(60))
      input(type='text', placeholder='Share your meal')
      i.big.photo.link.icon
    each val in script
      //- create a card for each post in val (if by user make the card a little different)
      //- if val.relativeTime - then post came from user_post (so user post, user reply to actor reply to user post)
      if val.relativeTime
        -var u_class;
        -if (val.actorAuthor) {u_class = "actorReply"}
        -else if (val.reply) {u_class = "userReply"}
        -else {u_class = "userPost"}
        .ui.fluid.card(postID=val.id, ui=user.ui, notify=user.notify, type=u_class, u_postID=val.replyID || val.postID || val.actorReplyID)
          if val.reply
            //- if post is a reply post -  add the post and populate the reply as well
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
              |
              a.ui.avatar.image(href='/me')
                if user.profile.picture
                  img(src='/user_post/'+user.profile.picture)
                else
                  img(src=user.gravatar(60))
              a(href='/me')
                span=user.profile.name || user.email || user.id
            .content
              .description(style="font-size:130%")=val.body
            .extra.content
              .ui.fluid.card
                .content
                  .right.floated.time.meta= (user.createdAt.getTime() + val.reply.time)
                  |
                  a(href='/user/'+val.reply.actor.username)   
                    img.ui.avatar.image(src='/profile_pictures/'+val.reply.actor.profile.picture)
                    span=val.reply.actor.profile.name
                .content
                  if val.reply.picture
                    img.post.ui.left.floated.small.image(src=val.reply.picture)
                  p=val.reply.body
            .three.ui.bottom.attached.icon.buttons
              //-.ui.reply.button(tabindex='0')
              .ui.button(tabindex='0')
                i.reply.icon
                |  Reply
              //-.ui.flag.button(tabindex='0')
              .ui.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                //-.ui.red.like.button
                .ui.red.button
                  i.heart.icon
                  |  Like
              else
                //-.ui.like.button
                .ui.button
                  i.heart.icon
                  |  Like

          //- This is a actor reply to a user post
          else if val.actorAuthor
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
              |
              a(href='/user/'+val.actorAuthor.username)
                img.ui.avatar.image(src='/profile_pictures/'+val.actorAuthor.profile.picture)
                span=val.actorAuthor.profile.name
            .content
              .description(style="font-size:130%")=val.body
            .extra.content
              .ui.fluid.card
                .content
                  .right.floated.time.meta= (user.createdAt.getTime() + val.actorReplyORelativeTime)
                  |
                  a.ui.avatar.image(href='/me')
                    if user.profile.picture
                      img(src='/user_post/'+user.profile.picture)
                    else
                      img(src=user.gravatar(60))
                  a(href='/me')
                    span=user.profile.name || user.email || user.id
                .content
                  if val.actorReplyOPicture
                    img.post.ui.left.floated.small.image(src='/user_post/'+val.actorReplyOPicture)
                  p=val.actorReplyOBody
            .three.ui.bottom.attached.icon.buttons
              //-.ui.reply.button(tabindex='0')
              .ui.button(tabindex='0')
                i.reply.icon
                |  Reply
              //-.ui.flag.button(tabindex='0')
              .ui.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                //-.ui.red.like.button
                .ui.red.button
                  i.heart.icon
                  |  Like
              else
                //-.ui.like.button
                .ui.button
                  i.heart.icon
                  |  Like

          //- This is a User made post
          else
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
              |  
              a.ui.avatar.image(href='/me')
                if user.profile.picture
                  img(src='/user_post/'+user.profile.picture)
                else
                  img(src=user.gravatar(60))
              a(href='/me')
                span=user.profile.name || user.email || user.id
            .image
              img(src='/user_post/'+val.picture)
            .content
              .description=val.body
            .three.ui.bottom.attached.icon.buttons
              //-.ui.reply.button(tabindex='0')
              .ui.button(tabindex='0')
                i.reply.icon
                |  Reply
              //-.ui.flag.button(tabindex='0')
              .ui.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                //-.ui.red.like.button
                .ui.red.button
                  i.heart.icon
                  |  Like
              else
                //-.ui.like.button
                .ui.button
                  i.heart.icon
                  |  Like

      //-THIS is for posts by Actors, not the USER
      else
        .ui.fluid.card.dim(postID=val.id, ui=user.ui, notify=user.notify, state=val.state || 'unread', type='actor')
          //- dimmer DIV for flagging
          .ui.dimmer.flag
                .content
                  .center
                    h2.ui.inverted.icon.header
                      i.red.flag.icon
                      |  You&apos;ve flagged this!
                      h3.ui.inverted.header
                        span="The admins will review this post further. We are sorry you had this experience."
          if user.ui == 'ui'
            //- if user is in UI condistion - add read dimmer to post
            if val.read 
              //- if user has already READ this post before - set dimmer to active (turn it on)
              .ui.inverted.active.read.dimmer
                .content
                  .center
                    h2.ui.icon.header
                      i.unhide.icon
                      |  You&apos;ve read this!
                    br
                    if user.notify != 'no'
                      h3.ui.icon.header
                        img.ui.avatar.image(src='/profile_pictures/'+val.actor.profile.picture)
                        span=" "+val.actor.profile.name+" "
                        | has been notified
                        br
                        if val.reply
                          img.ui.avatar.image(src='/profile_pictures/'+val.reply.actor.profile.picture)
                          span=" "+val.reply.actor.profile.name+" "
                          | has been notified
                        br
                    br
                    button.ui.black.button.reread Read Again?                
            else
              //- user has not read this post, but is in UI condistion, so add dimmer, but don't turn it on
              .ui.inverted.read.dimmer
                .content
                  .center
                    h2.ui.icon.header
                      i.unhide.icon
                      |  You&apos;ve read this!
                    br
                    if user.notify != 'no'
                      h3.ui.icon.header
                        img.ui.avatar.image(src='/profile_pictures/'+val.actor.profile.picture)
                        span=" "+val.actor.profile.name+" "
                        | has been notified
                        br
                        if val.reply
                          img.ui.avatar.image(src='/profile_pictures/'+val.reply.actor.profile.picture)
                          span=" "+val.reply.actor.profile.name+" "
                          | has been notified
                        br
                    br
                    button.ui.black.button.reread Read Again?

          if val.reply
            //- if post is a reply post - add the post and populate the reply as well
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.time)
              |
              a.ui.avatar.image(href='/user/'+val.actor.username)
                img(src='/profile_pictures/'+val.actor.profile.picture)
              a(href='/user/'+val.actor.username)
                span=val.actor.profile.name
            .content
              .description(style="font-size:130%")=val.body
            .extra.content
              .ui.fluid.card
                .content
                  .right.floated.time.meta= (user.createdAt.getTime() + val.reply.time)
                  |
                  a(href='/user/'+val.reply.actor.username)   
                    img.ui.avatar.image(src='/profile_pictures/'+val.reply.actor.profile.picture)
                    span=val.reply.actor.profile.name
                .content
                  if val.reply.picture
                    img.post.ui.left.floated.small.image(src=val.reply.picture)
                  p=val.reply.body
              if user.notify != 'low'
                .right.floated.meta
                  i.icon.checkmark
                  | Seen by #{val.lowread}
              else if user.notify != 'high'
                .right.floated.meta
                  i.icon.checkmark
                  | Seen by #{val.highread}
            .three.ui.bottom.attached.icon.buttons
              .ui.reply.button(tabindex='0')
                i.reply.icon
                |  Reply
              .ui.flag.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                .ui.labeled.button(tabindex='0')
                  .ui.red.like.button
                    i.heart.icon
                    |  Like
                  a.ui.basic.red.left.pointing.label=val.likes
                    | 15
              else
                .ui.labeled.button(tabindex='0')
                  .ui.like.button
                    i.heart.icon
                    |  Like
                  a.ui.basic.red.left.pointing.label.count=val.likes
      
          else
            //- not a reply post - visualize like normal
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.time)
              |  
              a(href='/user/'+val.actor.username)
                img.ui.avatar.image(src='/profile_pictures/'+val.actor.profile.picture)
                span=val.actor.profile.name
            .image
              img.post(src=val.picture)
              //-img(src='/picture.svg', data-src=val.picture)
            .content
              .description=val.body
              if user.notify != 'low'
                .right.floated.meta
                  i.icon.checkmark
                  | Seen by #{val.lowread}
              else if user.notify != 'high'
                .right.floated.meta
                  i.icon.checkmark
                  | Seen by #{val.highread}
            .three.ui.bottom.attached.icon.buttons
              .ui.reply.button(tabindex='0')
                i.reply.icon
                |  Reply
              .ui.flag.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                .ui.labeled.button(tabindex='0')
                  .ui.red.like.button
                    i.heart.icon
                    |  Like
                  a.ui.basic.red.left.pointing.label=val.likes
              else
                .ui.labeled.button(tabindex='0')
                  .ui.like.button
                    i.heart.icon
                    |  Like
                  a.ui.basic.red.left.pointing.label.count=val.likes
    .ui.fluid.card
      .content
        .description
        |  End of Posts for the last 24 hours.
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    //- New Reply Modal
    .ui.small.reply.modal
      i.close.icon
      .header Reply to Post
      .content
        form#replyform.ui.reply.form(action='/post/new', method='POST', enctype='multipart/form-data')
          input(type='hidden', name='_csrf', value=_csrf)
          input#replyInput(type='hidden', name='reply', value='a')
          .field
            textarea(rows='2', placeholder='Add your Reply', name='body')
          .ui.error.message
      .actions
        input.ui.green.button(type='submit', value='Submit', form='replyform')
